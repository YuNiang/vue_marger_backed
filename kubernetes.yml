apiVersion: v1
kind: Service
metadata:
  name: {SVC_NAME}
  namespace: {NAMESPACE}
  labels:
    k8s-app: {SVC_NAME}
    qcloud-app: {SVC_NAME}
spec:
  ports:
  - name: http-80-80
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    k8s-app: {POD_NAME}
    qcloud-app: {POD_NAME}
  type: ClusterIP
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {POD_NAME}-{VERSION}
  namespace: {NAMESPACE}
spec:
  maxReplicas: 1
  minReplicas: 1
  metrics:
  - resource:
      name: cpu
      targetAverageUtilization: 80
    type: Resource
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: {POD_NAME}-{VERSION}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {POD_NAME}-{VERSION}
  namespace: {NAMESPACE}
  labels:
    k8s-app: {POD_NAME}
    qcloud-app: {POD_NAME}
    tj-version: {VERSION}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {POD_NAME}
      qcloud-app: {POD_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: {POD_NAME}
        qcloud-app: {POD_NAME}
        tj-version: {VERSION}
    spec:
      containers:
        - image: {IMAGE}
          imagePullPolicy: Always
          name: {POD_NAME}
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: qcloudregistrykey
        - name: tencenthubkey
        - name: gitlab-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
